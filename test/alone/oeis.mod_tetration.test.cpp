// competitive-verifier: STANDALONE

#include <cassert>
#include "src/Math/mod_tetration.hpp"
using namespace std;
int len(unsigned long long x) {
 int ret= 0;
 while (x) x/= 10, ++ret;
 return ret;
}
constexpr unsigned long long pw10[20]= {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 10000000000000000, 100000000000000000, 1000000000000000000, 10000000000000000000ULL};
signed main() {
 {  // https://oeis.org/A317824
  constexpr int N= 14;
  unsigned long long m[N]= {1, 21, 321, 4321, 54321, 654321, 7654321, 87654321, 987654321, 10987654321, 1110987654321, 121110987654321, 13121110987654321, 1413121110987654321};
  unsigned long long ans[N]= {1, 21, 721, 8721, 8721, 708721, 5708721, 65708721, 165708721, 65165708721, 1165165708721, 861165165708721, 5861165165708721, 5005861165165708721};
  for (int i= 0; i < N; ++i) assert(mod_tetration(m[i], m[i], pw10[len(m[i])]) == ans[i]);
 }

 {  // https://oeis.org/A317903
  constexpr int N= 11;
  unsigned long long m[N]= {2, 32, 532, 7532, 117532, 13117532, 1713117532, 191713117532, 23191713117532, 2923191713117532, 312923191713117532};
  unsigned long long ans[N]= {4, 76, 176, 4176, 314176, 91314176, 891314176, 80891314176, 88080891314176, 5288080891314176, 705288080891314176};
  for (int i= 0; i < N; ++i) assert(mod_tetration(m[i], m[i], pw10[len(m[i])]) == ans[i]);
 }

 {  //  https://oeis.org/A371720
  constexpr int N= 12;
  unsigned long long m[N]= {1, 11, 211, 3211, 53211, 853211, 13853211, 2113853211, 342113853211, 55342113853211, 8955342113853211, 1448955342113853211};
  unsigned long long ans[N]= {1, 11, 811, 3811, 63811, 763811, 3763811, 5103763811, 515103763811, 19515103763811, 6819515103763811, 8146819515103763811};
  for (int i= 0; i < N; ++i) assert(mod_tetration(m[i], m[i], pw10[len(m[i])]) == ans[i]);
 }

 return 0;
}